// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cELQgcBTCpXC8URn4hyouo
// Component: IUhmGZz1se
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarCustom from "../../NavbarCustom"; // plasmic-import: 5sPSsjDnyE/component
import ItemInside from "../../ItemInside"; // plasmic-import: nG5tYecuo7/component
import TeamItemBox from "../../TeamItemBox"; // plasmic-import: Df4ah1WY7c/component
import BoxesFooter from "../../BoxesFooter"; // plasmic-import: oP4880RYxJw/component
import TrueFooter from "../../TrueFooter"; // plasmic-import: 1RTRAsLRW5N/component
import { useScreenVariants as useScreenVariantsnK2Y1P6I3Vepj } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nK2Y1p6i3Vepj/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_akyllers.module.css"; // plasmic-import: cELQgcBTCpXC8URn4hyouo/projectcss
import sty from "./PlasmicHomepage2.module.css"; // plasmic-import: IUhmGZz1se/css

export const PlasmicHomepage2__VariantProps = new Array();

export const PlasmicHomepage2__ArgProps = new Array();

export const defaultHomepage2__Args = {};

function PlasmicHomepage2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage2__Args, props.args);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnK2Y1P6I3Vepj()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"About"}</title>
        <meta key="og:title" property="og:title" content={"About"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <NavbarCustom
              data-plasmic-name={"navbarCustom"}
              data-plasmic-override={overrides.navbarCustom}
              className={classNames("__wab_instance", sty.navbarCustom)}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__fH6Ts)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lfBrf)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: "/plasmic/akyllers/images/untitledArtworkpng.png",
                    fullWidth: 3000,
                    fullHeight: 3798,
                    aspectRatio: undefined
                  }}
                />
              </div>
            ) : null}

            <div
              data-plasmic-name={"fakeRoot"}
              data-plasmic-override={overrides.fakeRoot}
              className={classNames(projectcss.all, sty.fakeRoot)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___9EvOx)}>
                <div
                  data-plasmic-name={"mission"}
                  data-plasmic-override={overrides.mission}
                  className={classNames(projectcss.all, sty.mission)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q8Fpl
                    )}
                  >
                    {
                      "Akyllers is a web 3.0 brand with a vision.\nTurn Boring parts of life into a game."
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"section2"}
            data-plasmic-override={overrides.section2}
            hasGap={true}
            className={classNames(projectcss.all, sty.section2)}
          >
            <div
              data-plasmic-name={"imgLeftTextRight"}
              data-plasmic-override={overrides.imgLeftTextRight}
              className={classNames(projectcss.all, sty.imgLeftTextRight)}
            >
              <div className={classNames(projectcss.all, sty.columns__mw7Mj)}>
                <div className={classNames(projectcss.all, sty.column__k1YKy)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yzMV)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/akyllers/images/untitledArtworkpng.png",
                      fullWidth: 3000,
                      fullHeight: 3798,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__fU7WG)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gvTXi)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__vdsuy
                      )}
                    >
                      {"LFG = Life is a Game"}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eOfel
                      )}
                    >
                      {
                        "From the Hood, to the Arcade, we're bringing decentralized stuff to the 80s."
                      }
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fY6UY)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__pOx8O
                      )}
                    >
                      {"We are gamers... processing..."}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rghRl
                      )}
                    >
                      {
                        "Here is to all the misfits, the rebels, the gamers who rejected reality and created one of their own. Here's what we are here to build: A new way of doin' things."
                      }
                    </div>
                  </div>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"items"}
              data-plasmic-override={overrides.items}
              className={classNames(projectcss.all, sty.items)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__nDuHv
                )}
              >
                {"Things we are here for"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8QKxX
                )}
              >
                {
                  "We are here to build together, to create together, to have fun & grow together as we embark on a journey that has no attachment to status quo. We, Akyllers, live in a world beyond your world, in a hood that joins creators, builders, individuals who are bold enough to be humble, proud, and defiant. "
                }
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__avgEn)}>
                <div className={classNames(projectcss.all, sty.columns__cnNCb)}>
                  <div
                    className={classNames(projectcss.all, sty.column__wiYhX)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__oDrqp
                      )}
                    >
                      {"4,444 unique Akyller tokens"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__wdcnp)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__aHrV6
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork2Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Brand with a vision: LFG"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___3Kxz9)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__nt9N3
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork3Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Brand built by Akyllers to All"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tOjOk)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__mHw57
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork4Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Riding Web 3.0 & everything in it"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___59V5)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__yJfG
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork5Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Anime is still in Chapter one."}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__b4MLg)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__lu9J3
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork6Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"An ecosystem in the making."}
                    </ItemInside>
                  </div>
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"team"}
              data-plasmic-override={overrides.team}
              className={classNames(projectcss.all, sty.team)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__koFfd)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__jysa3
                  )}
                >
                  {"Title goes here"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ukAwi
                  )}
                >
                  {"Enter some text"}
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"photos"}
                data-plasmic-override={overrides.photos}
                hasGap={true}
                className={classNames(projectcss.all, sty.photos)}
              >
                <TeamItemBox
                  className={classNames(
                    "__wab_instance",
                    sty.teamItemBox___1Yeaa
                  )}
                  title={"Akylles"}
                />

                <TeamItemBox
                  className={classNames(
                    "__wab_instance",
                    sty.teamItemBox__xBem1
                  )}
                  title={"Akylles"}
                />

                <TeamItemBox
                  className={classNames(
                    "__wab_instance",
                    sty.teamItemBox__y5V0K
                  )}
                  title={"Akylles"}
                />
              </p.Stack>
            </div>

            <BoxesFooter
              data-plasmic-name={"boxesFooter"}
              data-plasmic-override={overrides.boxesFooter}
              className={classNames("__wab_instance", sty.boxesFooter)}
            />

            <TrueFooter
              data-plasmic-name={"trueFooter"}
              data-plasmic-override={overrides.trueFooter}
              className={classNames("__wab_instance", sty.trueFooter)}
            />
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "hero",
    "navbarCustom",
    "fakeRoot",
    "mission",
    "section2",
    "imgLeftTextRight",
    "items",
    "team",
    "photos",
    "boxesFooter",
    "trueFooter"
  ],

  hero: ["hero", "navbarCustom", "fakeRoot", "mission"],
  navbarCustom: ["navbarCustom"],
  fakeRoot: ["fakeRoot", "mission"],
  mission: ["mission"],
  section2: [
    "section2",
    "imgLeftTextRight",
    "items",
    "team",
    "photos",
    "boxesFooter",
    "trueFooter"
  ],

  imgLeftTextRight: ["imgLeftTextRight"],
  items: ["items"],
  team: ["team", "photos"],
  photos: ["photos"],
  boxesFooter: ["boxesFooter"],
  trueFooter: ["trueFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage2__ArgProps,
      internalVariantPropNames: PlasmicHomepage2__VariantProps
    });

    return PlasmicHomepage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage2";
  } else {
    func.displayName = `PlasmicHomepage2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage2 = Object.assign(
  // Top-level PlasmicHomepage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    navbarCustom: makeNodeComponent("navbarCustom"),
    fakeRoot: makeNodeComponent("fakeRoot"),
    mission: makeNodeComponent("mission"),
    section2: makeNodeComponent("section2"),
    imgLeftTextRight: makeNodeComponent("imgLeftTextRight"),
    items: makeNodeComponent("items"),
    team: makeNodeComponent("team"),
    photos: makeNodeComponent("photos"),
    boxesFooter: makeNodeComponent("boxesFooter"),
    trueFooter: makeNodeComponent("trueFooter"),
    // Metadata about props expected for PlasmicHomepage2
    internalVariantProps: PlasmicHomepage2__VariantProps,
    internalArgProps: PlasmicHomepage2__ArgProps
  }
);

export default PlasmicHomepage2;
/* prettier-ignore-end */
