// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cELQgcBTCpXC8URn4hyouo
// Component: IUhmGZz1se
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { ParallaxWrapper } from "@plasmicpkgs/react-scroll-parallax"; // plasmic-import: bozP4lLlAZ/codeComponent
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import ItemInside from "../../ItemInside"; // plasmic-import: nG5tYecuo7/component
import TeamItemBox from "../../TeamItemBox"; // plasmic-import: Df4ah1WY7c/component
import BoxesFooter from "../../BoxesFooter"; // plasmic-import: oP4880RYxJw/component
import TrueFooter from "../../TrueFooter"; // plasmic-import: 1RTRAsLRW5N/component
import { useScreenVariants as useScreenVariantsnK2Y1P6I3Vepj } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nK2Y1p6i3Vepj/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_akyllers.module.css"; // plasmic-import: cELQgcBTCpXC8URn4hyouo/projectcss
import sty from "./PlasmicHomepage2.module.css"; // plasmic-import: IUhmGZz1se/css
import DiscordSvgrepoComsvgIcon from "./icons/PlasmicIcon__DiscordSvgrepoComsvg"; // plasmic-import: DZ_ZJwIq1b/icon
import InstagramSvgrepoCom2SvgIcon from "./icons/PlasmicIcon__InstagramSvgrepoCom2Svg"; // plasmic-import: DNMeweYbp-/icon
import TwitterSvgrepoComsvgIcon from "./icons/PlasmicIcon__TwitterSvgrepoComsvg"; // plasmic-import: SCWRDWiaJn/icon

export const PlasmicHomepage2__VariantProps = new Array();

export const PlasmicHomepage2__ArgProps = new Array();

export const defaultHomepage2__Args = {};

function PlasmicHomepage2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage2__Args, props.args);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnK2Y1P6I3Vepj()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__fH6Ts)}>
              <ParallaxWrapper
                data-plasmic-name={"scrollParallax"}
                data-plasmic-override={overrides.scrollParallax}
                className={classNames("__wab_instance", sty.scrollParallax)}
                speed={20}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lfBrf)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: "/plasmic/akyllers/images/ezgifcomGifMaker2Png.png",
                    fullWidth: 1920,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />
              </ParallaxWrapper>
            </div>

            <div
              data-plasmic-name={"fakeRoot"}
              data-plasmic-override={overrides.fakeRoot}
              className={classNames(projectcss.all, sty.fakeRoot)}
            >
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__q5PDn
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__l54Pg)}
                      displayHeight={"40px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      src={{
                        src: "/plasmic/akyllers/images/logopng.png",
                        fullWidth: 1560,
                        fullHeight: 303,
                        aspectRatio: undefined
                      }}
                    />
                  </p.PlasmicLink>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yEayQ)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/akyllers/images/ghostWhitepng.png",
                            fullWidth: 32,
                            fullHeight: 32,
                            aspectRatio: undefined
                          }
                        : "https://static1.plasmic.app/close.svg"
                    }
                  />
                }
                itemsGap={12}
                menuItems={
                  <React.Fragment>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___2I9S0
                      )}
                      component={Link}
                      href={"/manifesto-5"}
                      platform={"nextjs"}
                    >
                      {"Gallery"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__s5LC7
                      )}
                      component={Link}
                      href={"/manifesto-3"}
                      platform={"nextjs"}
                    >
                      {"Roadmap"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__lxVcx
                      )}
                      component={Link}
                      href={"/manifesto"}
                      platform={"nextjs"}
                    >
                      {"manifesto"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__vgXzj
                      )}
                      component={Link}
                      href={"/-2"}
                      platform={"nextjs"}
                    >
                      {"arcade"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__tlyIa
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <DiscordSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg___4YbdT)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__f0Zhb
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <InstagramSvgrepoCom2SvgIcon
                        className={classNames(projectcss.all, sty.svg__rQn5O)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___8891
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <TwitterSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__cpK9S)}
                        role={"img"}
                      />
                    </p.PlasmicLink>
                  </React.Fragment>
                }
                openButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xqH7Y)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "30px"
                        : "auto"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "30px"
                        : "auto"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/akyllers/images/pacmanWhitepng.png",
                            fullWidth: 512,
                            fullHeight: 512,
                            aspectRatio: undefined
                          }
                        : "https://static1.plasmic.app/menu.svg"
                    }
                  />
                }
                responsiveBreakpoint={768}
              />

              <div className={classNames(projectcss.all, sty.freeBox___9EvOx)}>
                <div
                  data-plasmic-name={"mission"}
                  data-plasmic-override={overrides.mission}
                  className={classNames(projectcss.all, sty.mission)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q8Fpl
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Our intent is"}
                      </span>
                      <React.Fragment>
                        {"\nto be unclassifiable in a cluttered NFT landscape."}
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"section2"}
            data-plasmic-override={overrides.section2}
            hasGap={true}
            className={classNames(projectcss.all, sty.section2)}
          >
            <div
              data-plasmic-name={"imgLeftTextRight"}
              data-plasmic-override={overrides.imgLeftTextRight}
              className={classNames(projectcss.all, sty.imgLeftTextRight)}
            >
              <div className={classNames(projectcss.all, sty.columns__mw7Mj)}>
                <div className={classNames(projectcss.all, sty.column__k1YKy)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yzMV)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/akyllers/images/humanMenEyesFacialMouth1Png.png",
                      fullWidth: 2048,
                      fullHeight: 2048,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__fU7WG)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gvTXi)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__vdsuy
                      )}
                    >
                      {"Title goes here"}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eOfel
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fY6UY)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__pOx8O
                      )}
                    >
                      {"Title goes here"}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rghRl
                      )}
                    >
                      {"Enter some text"}
                    </div>
                  </div>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"items"}
              data-plasmic-override={overrides.items}
              className={classNames(projectcss.all, sty.items)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__nDuHv
                )}
              >
                {"WELCOME TO AKYLLA"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8QKxX
                )}
              >
                {
                  "When you buy an Akyller, you are not simply buying an avatar or an exquisite rare piece of art. Instead, you are gaining access to a brand built by a community whose value & benefits increase over time. Your Akyller is your digital identity granting you exclusive access & Full IP Commercial rights."
                }
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__avgEn)}>
                <div className={classNames(projectcss.all, sty.columns__cnNCb)}>
                  <div
                    className={classNames(projectcss.all, sty.column__wiYhX)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__oDrqp
                      )}
                    >
                      {"4,444 Original rare Akyller tokens"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__wdcnp)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__aHrV6
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork2Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Play to Learn to Earn"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___3Kxz9)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__nt9N3
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork3Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"You own IP commercial rights on your Akyller"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tOjOk)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__mHw57
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork4Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {
                        "Gain additional benefits through roadmap activations the more you Hold"
                      }
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___59V5)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__yJfG
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork5Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"The Arcade: A member's-only NFT gated community"}
                    </ItemInside>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__b4MLg)}
                  >
                    <ItemInside
                      className={classNames(
                        "__wab_instance",
                        sty.itemInside__lu9J3
                      )}
                      image={{
                        src: "/plasmic/akyllers/images/untitledArtwork6Png.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    >
                      {"Fair Launch, fair distribution"}
                    </ItemInside>
                  </div>
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"team"}
              data-plasmic-override={overrides.team}
              className={classNames(projectcss.all, sty.team)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__koFfd)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__jysa3
                  )}
                >
                  {"Title goes here"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ukAwi
                  )}
                >
                  {"Enter some text"}
                </div>
              </div>

              <div
                data-plasmic-name={"photos"}
                data-plasmic-override={overrides.photos}
                className={classNames(projectcss.all, sty.photos)}
              >
                <TeamItemBox
                  data-plasmic-name={"teamItemBox"}
                  data-plasmic-override={overrides.teamItemBox}
                  className={classNames("__wab_instance", sty.teamItemBox)}
                />
              </div>
            </div>

            <BoxesFooter
              data-plasmic-name={"boxesFooter"}
              data-plasmic-override={overrides.boxesFooter}
              className={classNames("__wab_instance", sty.boxesFooter)}
            />

            <TrueFooter
              data-plasmic-name={"trueFooter"}
              data-plasmic-override={overrides.trueFooter}
              className={classNames("__wab_instance", sty.trueFooter)}
            />
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "hero",
    "scrollParallax",
    "fakeRoot",
    "navigationBar",
    "mission",
    "section2",
    "imgLeftTextRight",
    "items",
    "team",
    "photos",
    "teamItemBox",
    "boxesFooter",
    "trueFooter"
  ],

  hero: ["hero", "scrollParallax", "fakeRoot", "navigationBar", "mission"],
  scrollParallax: ["scrollParallax"],
  fakeRoot: ["fakeRoot", "navigationBar", "mission"],
  navigationBar: ["navigationBar"],
  mission: ["mission"],
  section2: [
    "section2",
    "imgLeftTextRight",
    "items",
    "team",
    "photos",
    "teamItemBox",
    "boxesFooter",
    "trueFooter"
  ],

  imgLeftTextRight: ["imgLeftTextRight"],
  items: ["items"],
  team: ["team", "photos", "teamItemBox"],
  photos: ["photos", "teamItemBox"],
  teamItemBox: ["teamItemBox"],
  boxesFooter: ["boxesFooter"],
  trueFooter: ["trueFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage2__ArgProps,
      internalVariantPropNames: PlasmicHomepage2__VariantProps
    });

    return PlasmicHomepage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage2";
  } else {
    func.displayName = `PlasmicHomepage2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage2 = Object.assign(
  // Top-level PlasmicHomepage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    scrollParallax: makeNodeComponent("scrollParallax"),
    fakeRoot: makeNodeComponent("fakeRoot"),
    navigationBar: makeNodeComponent("navigationBar"),
    mission: makeNodeComponent("mission"),
    section2: makeNodeComponent("section2"),
    imgLeftTextRight: makeNodeComponent("imgLeftTextRight"),
    items: makeNodeComponent("items"),
    team: makeNodeComponent("team"),
    photos: makeNodeComponent("photos"),
    teamItemBox: makeNodeComponent("teamItemBox"),
    boxesFooter: makeNodeComponent("boxesFooter"),
    trueFooter: makeNodeComponent("trueFooter"),
    // Metadata about props expected for PlasmicHomepage2
    internalVariantProps: PlasmicHomepage2__VariantProps,
    internalArgProps: PlasmicHomepage2__ArgProps
  }
);

export default PlasmicHomepage2;
/* prettier-ignore-end */
